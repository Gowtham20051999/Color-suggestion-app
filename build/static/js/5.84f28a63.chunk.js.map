{"version":3,"sources":["pages/collection/collection.styles.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPageContainer","styled","div","CollectionTitle","h2","CollectionItemsContainer","connect","state","ownProps","collection","selectCollection","match","params","collectionId","mapStateToProps","createStructuredSelector","isLoading","selectIsCollectionsLoaded","compose","WithSpinner","CollectionPage","selectShop","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","collectionUrlParam","selectIsCollectionFetching","isFetching","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","item","name","price","className","onClick","inverted"],"mappings":"8vBAEO,IAAMA,EAA0BC,IAAOC,IAAV,KAMvBC,EAAkBF,IAAOG,GAAV,KAKfC,EAA2BJ,IAAOC,IAAV,KCkBtBI,eAJS,SAACC,EAAOC,GAAR,MAAsB,CAC5CC,WAAYC,YAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAGpDD,EAlBQ,SAAC,GAAmB,EAAjBG,WAExB,OACE,kBAACT,EAAD,KACE,kBAACG,EAAD,MACA,kBAACE,EAAD,UCVAS,EAAkBC,YAAyB,CAC/CC,UAAW,SAAAT,GAAK,OAAKU,YAA0BV,MAG3CP,EAA0BkB,YAC9BZ,YAAQQ,GACRK,IAF8BD,CAG9BE,GAEapB,a,gCCjBf,oJAEMqB,EAAa,SAAAd,GAAK,OAAIA,EAAMe,MAErBC,EAAoBC,YAC/B,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKG,eAGFC,EAA8BF,YACzC,CAACD,IACD,SAAAE,GAAW,OACTA,EAAcE,OAAOC,KAAKH,GAAaI,KAAI,SAAAC,GAAG,OAAIL,EAAYK,MAAQ,MAG7DpB,EAAmB,SAAAqB,GAAkB,OAChDP,YACE,CAACD,IACD,SAAAE,GAAW,OAAKA,EAAcA,EAAYM,GAAsB,SAGvDC,EAA6BR,YACxC,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKW,cAGFhB,EAA4BO,YACvC,CAACH,IACD,SAAAC,GAAI,QAAMA,EAAKG,gB,oECpBFN,IAJK,SAAAe,GAAgB,OAAI,YAAmC,IAAhClB,EAA+B,EAA/BA,UAAcmB,EAAiB,6BACxE,OAAOnB,EAAY,kBAAC,IAAD,MAAc,kBAACkB,EAAqBC,M,k+CCFlD,IAAMC,EAA0BnC,IAAOC,IAAV,KAkCvBmC,EAAYpC,YAAOqC,IAAPrC,CAAH,KAeTsC,EAAkBtC,IAAOC,IAAV,KAMN,gBAAGsC,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4BxC,IAAOC,IAAV,KAQzBwC,EAAgBzC,IAAO0C,KAAV,KAKbC,EAAiB3C,IAAO0C,KAAV,KCvCZrC,gBACb,MALyB,SAAAuC,GAAQ,MAAK,CACtCC,QAAS,SAAAC,GAAI,OAAIF,EAASC,YAAQC,QAGrBzC,EArBQ,SAAC,GAAuB,IAArByC,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACtBE,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOT,EAAaO,EAAbP,SAErB,OACE,kBAACJ,EAAD,KACE,kBAACG,EAAD,CAAiBW,UAAU,QAAQV,SAAUA,IAC7C,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAgBM,GAChB,kBAACJ,EAAD,KAAiBK,IAEnB,kBAACZ,EAAD,CAAWc,QAAS,kBAAML,EAAQC,IAAOK,UAAQ,GAAjD","file":"static/js/5.84f28a63.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const CollectionPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const CollectionTitle = styled.h2`\n  font-size: 38px;\n  margin: 0 auto 30px;\n`;\n\nexport const CollectionItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n\n  & > div {\n    margin-bottom: 30px;\n  }\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px;\n  }\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport CollectionItem from '../../components/collection-item/collection-item.component';\n\nimport { selectCollection } from '../../redux/shop/shop.selectors';\n\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer\n} from './collection.styles';\n\nconst CollectionPage = ({ collection }) => {\n // const { title, items } = collection;\n  return (\n    <CollectionPageContainer>\n      <CollectionTitle>{}</CollectionTitle>\n      <CollectionItemsContainer>\n        {/* {items.map(item => (\n          <CollectionItem key={item.id} item={item} />\n        ))} */}\n      </CollectionItemsContainer>\n    </CollectionPageContainer>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPage from './collection.component';\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: state => !selectIsCollectionsLoaded(state)\n});\n\nconst CollectionPageContainer = compose(\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionPage);\n\nexport default CollectionPageContainer;\n","import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collections =>\n    collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollection = collectionUrlParam =>\n  createSelector(\n    [selectCollections],\n    collections => (collections ? collections[collectionUrlParam] : null)\n  );\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  shop => !!shop.collections\n);\n","import React from 'react';\n\nimport Spinner from '../spinner/spinner.component';\n\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\n};\n\nexport default WithSpinner;\n","import styled from 'styled-components';\nimport CustomButton from '../custom-button/custom-button.component';\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      .image {\n        opacity: unset;\n      }\n\n      button {\n        opacity: unset;\n      }\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  text-align: right;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addItem } from '../../redux/cart/cart.actions';\n\nimport {\n  CollectionItemContainer,\n  CollectionFooterContainer,\n  AddButton,\n  BackgroundImage,\n  NameContainer,\n  PriceContainer\n} from './collection-item.styles';\n\nconst CollectionItem = ({ item, addItem }) => {\n  const { name, price, imageUrl } = item;\n\n  return (\n    <CollectionItemContainer>\n      <BackgroundImage className='image' imageUrl={imageUrl} />\n      <CollectionFooterContainer>\n        <NameContainer>{name}</NameContainer>\n        <PriceContainer>{price}</PriceContainer>\n      </CollectionFooterContainer>\n      <AddButton onClick={() => addItem(item)} inverted>\n        Add to cart\n      </AddButton>\n    </CollectionItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CollectionItem);\n"],"sourceRoot":""}